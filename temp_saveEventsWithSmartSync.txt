  async saveEventsWithSmartSync(events: CalendarEvent[]): Promise<void> {
    // Get current event IDs from CalDAV
    const caldavEventIds = new Set(events.map(e => e.id));

    // Find events in local database that are missing from CalDAV
    const localEvents = await this.getAllEventIds();
    const missingFromCalDAV = localEvents.filter(
      id => !caldavEventIds.has(id)
    );

    // Track CalDAV deletions (iPhone deletions)
    for (const eventId of missingFromCalDAV) {
      const isAlreadyDeleted = await this.isEventDeleted(eventId);
      if (!isAlreadyDeleted) {
        await this.trackRemoteDeletion(eventId);
      }
    }

    if (events.length === 0) {
      return;
    }

    // Filter out events that were deleted locally
    const filteredEvents: CalendarEvent[] = [];
    for (const event of events) {
      const isDeleted = await this.isEventDeleted(event.id);
      if (!isDeleted) {
        filteredEvents.push(event);
      }
    }

    if (filteredEvents.length === 0) {
      return;
    }

    // Save the filtered events with metadata preservation
    await this.saveEvents(filteredEvents, true);
  }
